---
# tasks file for vagrant
- name: test veriables and environment
  assert:
    that:
      - vagrant_package_state is defined
      - vagrant_package_state == "present" or
        vagrant_package_state == "latest" or
        vagrant_package_state == "absent"
      - vagrant_ignore_docker is defined
      - vagrant_ignore_docker or
        not vagrant_ignore_docker
      - vagrant_version is defined

- name: download vagrant
  get_url:
    url: "{{ vagrant_package }}"
    dest: /tmp
  register: vagrant_download_vagrant
  until: vagrant_download_vagrant is succeeded
  retries: 3

- name: install vagrant rpm
  package:
    name: "/tmp/{{ vagrant_package | basename }}"
    state: "{{ vagrant_package_state }}"
  register: vagrant_install_vagrant_rpm
  until: vagrant_install_vagrant_rpm is succeeded
  retries: 3
  when:
    - ansible_pkg_mgr == "yum" or
      ansible_pkg_mgr == "dnf"

- name: install vagrant deb
  apt:
    deb: "/tmp/{{ vagrant_package | basename }}"
    state: "{{ vagrant_package_state }}"
  register: vagrant_install_vagrant_deb
  until: vagrant_install_vagrant_deb is succeeded
  retries: 3
  when:
    - ansible_pkg_mgr == "apt"

- name: install vagrant archive
  unarchive:
    src: "{{ vagrant_package | basename }}"
    dest: "{{ vagrant_unarchive_dest }}"
    creates: "{{ vagrant_unarchive_dest }}/vagrant"
    remote_src: yes
  when:
    - ansible_pkg_mgr != "apt"
    - ansible_pkg_mgr != "yum"
    - ansible_pkg_mgr != "dnf"

- name: install pip requirements
  pip:
    name: "{{ vagrant_pip_packages }}"
    state: "{{ vagrant_package_state }}"
  register: vagrant_install_pip_requirements
  until: vagrant_install_pip_requirements is succeeded
  retries: 3
